apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutes.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRoute
    plural: ingressroutes
    singular: ingressroute
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: middlewares.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: Middleware
    plural: middlewares
    singular: middleware
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutetcps.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRouteTCP
    plural: ingressroutetcps
    singular: ingressroutetcp
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressrouteudps.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRouteUDP
    plural: ingressrouteudps
    singular: ingressrouteudp
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tlsoptions.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: TLSOption
    plural: tlsoptions
    singular: tlsoption
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tlsstores.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: TLSStore
    plural: tlsstores
    singular: tlsstore
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: traefikservices.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: TraefikService
    plural: traefikservices
    singular: traefikservice
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serverstransports.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: ServersTransport
    plural: serverstransports
    singular: serverstransport
  scope: Namespaced

---
apiVersion: v1
kind: Namespace
metadata:
  name: traefikee

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "microsoft-svc-acc"
  namespace: traefikee
  labels:
    app: traefikee
    release: "microsoft"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: "microsoft-svc-acc-role"
  labels:
    app: traefikee
    release: "microsoft"
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
      - pods/log
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - create
      - update
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "networking.k8s.io"
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
      - ingressroutetcps
      - ingressrouteudps
      - tlsstores
      - tlsoptions
      - middlewares
      - traefikservices
      - serverstransports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - access.smi-spec.io
      - specs.smi-spec.io
      - split.smi-spec.io
    resources:
      - traffictargets
      - tcproutes
      - httproutegroups
      - trafficsplits
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: "microsoft-svc-acc"
  labels:
    app: traefikee
    release: "microsoft"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "microsoft-svc-acc-role"
subjects:
  - kind: ServiceAccount
    name: "microsoft-svc-acc"
    namespace: traefikee
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "microsoft-svc-acc-role-traefikee"
  namespace: traefikee
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "microsoft-svc-acc-traefikee"
  namespace: traefikee
roleRef:
  kind: Role
  name: "microsoft-svc-acc-role-traefikee"
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: "microsoft-svc-acc"
    namespace: traefikee

---
apiVersion: v1
kind: Service
metadata:
  name: "microsoft-ctrl-svc"
  namespace: traefikee
  labels:
    app: traefikee
    release: "microsoft"
spec:
  selector:
    app: traefikee
    release: "microsoft"
    component: controllers
  clusterIP: None
  publishNotReadyAddresses: true
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "microsoft-controller"
  namespace: traefikee
  labels:
    app: traefikee
    release: "microsoft"
spec:
  selector:
    matchLabels:
      app: traefikee
      release: "microsoft"
      component: controllers
  podManagementPolicy: Parallel
  serviceName: "microsoft-ctrl-svc"
  replicas: 1
  template:
    metadata:
      labels:
        app: traefikee
        release: "microsoft"
        component: controllers
    spec:
      serviceAccountName: "microsoft-svc-acc"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - controllers
                topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: wait-dns
          image: busybox:1.31.1
          command: ['sh', '-c', 'until nslookup -type=a microsoft-ctrl-svc.traefikee.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              memory: "10Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "1000m"
      containers:
        - name: "microsoft-controller"
          image: traefik/traefikee:v2.4.4
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LICENSE
              valueFrom:
                secretKeyRef:
                  name: "microsoft-license"
                  key: license
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          ports:
            - containerPort: 4242
              name: control-port
            - containerPort: 8080
              name: api
          readinessProbe:
            tcpSocket:
              port: control-port
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
            limits:
              memory: "4Gi"
              cpu: "1000m"
          volumeMounts:
            - name: data
              mountPath: /var/lib/traefikee
            - name: sockets
              mountPath: /var/run/traefikee
            - name: staticconfig
              mountPath: /var/run/traefikee/config
          command:
            - "/traefikee"
            - "controller"
            - "--name=$(POD_NAME)"
            - "--advertise=$(POD_NAME).microsoft-ctrl-svc.$(POD_NAMESPACE):4242"
            - "--discovery.dns.bootstrapexpected=1"
            - "--discovery.dns.domain=microsoft-ctrl-svc.$(POD_NAMESPACE)"
            - "--jointoken.kubernetes.prefix=microsoft"
            - "--jointoken.kubernetes.namespace=traefikee"
            - "--license=$(LICENSE)"
            - "--api.autocerts"
            - "--configFile=/var/run/traefikee/config/static.toml"
            - "--log.level="
            - "--log.filepath="
            - "--log.format="
            - "--plugin.url=https://microsoft-plugin-registry-svc.traefikee.svc.cluster.local"
            - "--plugin.token=w2vNkxGwlDFtiA=="
      volumes:
        - name: sockets
          emptyDir: {}
        - name: staticconfig
          configMap:
            name: microsoft-static-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: "microsoft-proxy-svc"
  namespace: traefikee
  labels:
    app: traefikee
    release: "microsoft"
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
  selector:
    app: traefikee
    release: "microsoft"
    component: proxies
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "microsoft-proxy"
  namespace: traefikee
  labels:
    app: traefikee
    release: "microsoft"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefikee
      release: "microsoft"
      component: proxies
  template:
    metadata:
      labels:
        app: traefikee
        release: "microsoft"
        component: proxies
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - proxies
                topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: false
      initContainers:
        - name: wait-dns
          image: busybox:1.31.1
          command: ['sh', '-c', 'until nslookup -type=a microsoft-ctrl-svc.traefikee.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              memory: "10Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "1000m"
      containers:
        - name: "microsoft-proxy"
          image: traefik/traefikee:v2.4.4
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          ports:
            - containerPort: 8484
              name: distributed
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          # readinessProbe:
          #   tcpSocket:
          #     port: http
          #   initialDelaySeconds: 2
          #   periodSeconds: 5
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
            limits:
              memory: "4Gi"
              cpu: "1000m"
          volumeMounts:
            - name: "microsoft-proxy-data"
              mountPath: "/var/lib/traefikee"
            - name: "join-token"
              mountPath: "/var/run/secrets"
          command:
            - "/traefikee"
            - "proxy"
            - "--role=ingress"
            - "--name=$(POD_NAME)"
            - "--discovery.dns.domain=microsoft-ctrl-svc.$(POD_NAMESPACE)"
            - "--jointoken.file.path=/var/run/secrets"
            - "--log.level="
            - "--log.filepath="
            - "--log.format="
      volumes:
        - name: "microsoft-proxy-data"
          emptyDir: {}
        - name: "join-token"
          secret:
            secretName: "microsoft-tokens"

---
apiVersion: v1
kind: Service
metadata:
  name: "microsoft-plugin-registry-svc"
  namespace: traefikee
  labels:
    app: traefikee
    release: "microsoft"
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: https
  selector:
    app: traefikee
    release: "microsoft"
    component: registry
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "microsoft-plugin-registry"
  namespace: traefikee
  labels:
    app: traefikee
    release: "microsoft"
spec:
  serviceName: "microsoft-plugin-registry-svc"
  replicas: 1
  selector:
    matchLabels:
      app: traefikee
      release: "microsoft"
      component: registry
  template:
    metadata:
      labels:
        app: traefikee
        release: "microsoft"
        component: registry
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - registry
                topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: false
      initContainers:
        - name: wait-dns
          image: busybox:1.31.1
          command: ['sh', '-c', 'until nslookup -type=a microsoft-ctrl-svc.traefikee.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              memory: "10Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "1000m"
      containers:
        - name: "microsoft-plugin-registry"
          image: traefik/traefikee:v2.4.4
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          # readinessProbe:
          #   tcpSocket:
          #     port: http
          #   initialDelaySeconds: 2
          #   periodSeconds: 5
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
            limits:
              memory: "4Gi"
              cpu: "1000m"
          volumeMounts:
            - name: "microsoft-plugin-registry-data"
              mountPath: "/var/lib/traefikee"
            - name: plugin-data
              mountPath: "/var/lib/plugins"
            - name: "join-token"
              mountPath: "/var/run/secrets"
          command:
            - "/traefikee"
            - "plugin-registry"
            - "--name=$(POD_NAME)"
            - "--plugindir=/var/lib/plugins"
            - "--token=w2vNkxGwlDFtiA=="
            - "--discovery.dns.domain=microsoft-ctrl-svc.$(POD_NAMESPACE)"
            - "--jointoken.file.path=/var/run/secrets"
            - "--log.level="
            - "--log.filepath="
            - "--log.format="
      volumes:
        - name: "microsoft-plugin-registry-data"
          emptyDir: {}
        - name: "join-token"
          secret:
            secretName: "microsoft-tokens"
  volumeClaimTemplates:
    - metadata:
        name: plugin-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
